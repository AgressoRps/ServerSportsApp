buildscript {

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}

plugins {
    id "java"
    id "application"
    id "idea"
    id "org.springframework.boot" version "1.5.13.RELEASE"
    id "nebula.release" version "6.0.2"
}

apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
    providedRuntime
}

springBoot {
    buildInfo()
}

def readableVersion() {
    def currentVersion = project.version.toString();
    if (currentVersion.contains("dev")) {
        def regexp = /\d{1,3}.\d{1,3}.\d{1,3}/;
        currentVersion = (currentVersion =~ /$regexp/)[0];
    }
    return currentVersion;
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-devtools:'
    compile 'org.springframework.boot:spring-boot-starter-log4j2'

    optional "org.springframework.boot:spring-boot-configuration-processor"
    
    runtime 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'

    compile 'org.hibernate:hibernate-java8'
    compile 'org.hibernate:hibernate-validator'

    compile 'org.webjars:webjars-locator:0.32-1'
}

compileJava.dependsOn(processResources)

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
    distributionUrl = "https\\://services.gradle.org/distributions/gradle-${gradleVersion}-bin.zip"
}
